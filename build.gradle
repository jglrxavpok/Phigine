import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

def filteredSourceDir = file("${buildDir}/filtered")

group 'org.jglr'
version '1.0-INDEV'

apply plugin: 'java'
apply plugin: 'scala'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    filtered {
        scala {
            srcDirs = [filteredSourceDir]
        }
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.7'
    compile 'org.lwjgl:lwjgl:3.0.0a'
    compile 'org.lwjgl:lwjgl-natives:3.0.0a'
    compile "io.netty:netty-all:4.0.28.Final"
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.1'
    compile 'org.apache.logging.log4j:log4j-core:2.1'
    compile 'org.jbox2d:jbox2d-library:2.2.1.1'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.code-disaster.steamworks4j:steamworks4j:1.2.0'
    compile 'com.code-disaster.steamworks4j:steamworks4j-natives:1.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task processVersion(type: Copy) {
    from sourceSets.main.scala
    into filteredSourceDir
    // Substitute property references in files
    // Use some of the filters provided by Ant
    filter(FixCrLfFilter)
    filter(ReplaceTokens, tokens: ['version': version])
    // Use a closure to filter each line
    filter { String line ->
        ("$line".replaceAll('"=phiversion="', '"'+version+'"'))
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}

//force UTF-8 to the compileJava task
compileScala.options.encoding = 'UTF-8'

compileScala.dependsOn processVersion